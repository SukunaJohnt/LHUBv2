local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(3)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

if getgenv().Settings.autocreateandjoinportal == true then
    if game.PlaceId == 16474126979 then 
        repeat wait() until game:IsLoaded()
        wait(.5)
        while task.wait(.1) do 
        if  not game:GetService("Workspace").Portal[game.Players.LocalPlayer.Name]:FindFirstChild("DoubleDungeonPortal") then 
        local args = {
           [1] = "DoubleDungeonPortal",
           [2] = 1
       }
       
       game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("InventoryUse"):FireServer(unpack(args))
     end 
     
     if game:GetService("Players").LocalPlayer.Inventory.Portal.DoubleDungeonPortal.Amount.Value == 0 then 
        game:GetService("Players").LocalPlayer.PlayerGui.NpcEvent.EventShop.Select.Value = "DoubleDungeonPortal"
        wait(.1)
        local Signals = {"Activated", "MouseButton1Down", "MouseButton2Down", "MouseButton1Click", "MouseButton2Click"}
     for _,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.NpcEvent.EventShop.ConfirmSellFrame:GetChildren()) do
        if  v:IsA("TextButton") and v.Name == "Yes" then
            for i,Signal in pairs(Signals) do
                firesignal(v[Signal])
            end
        end
     end
     end
     
       for i,v in pairs(game:GetService("Workspace").Portal:GetDescendants()) do 
        if v:IsA("MeshPart") and v.Name == "DoubleDungeonPortal" and v:FindFirstChild("Leader") and v.Leader.Value == game.Players.LocalPlayer.Name then 
           game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("StartPortal"):FireServer()
         end 
        end 
     end
     end 
    end
    
    
    if  game.PlaceId ~= 16474126979  and getgenv().Settings.record == true then
        repeat wait() until game:IsLoaded()
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Ready"):FireServer()
    
    local startTime = tick()
    local towerRecord = {}
    local httpService = game:GetService("HttpService")
    local mt = getrawmetatable(game)
    local oldNamecall = mt.__namecall
    setreadonly(mt, false)
    mt.__namecall = newcclosure(function(self, ...)
        args = {...}
        if getnamecallmethod() == "FireServer" and tostring(self) == "CreateUnits" then
            towerRecord[#towerRecord + 1] = {
                ["time"] = tick() - startTime; 
                ["moneyreq"] = tostring(game.Players.LocalPlayer.Money.Value);
                ["character"] = args[1]; 
                ["position"] = tostring(args[2]); 
                ["unitid"] = tostring(args[4]);
                ["type"] = "CreateUnit";
            }    
        elseif getnamecallmethod() == "FireServer" and tostring(self) == "Upgrades" then
            towerRecord[#towerRecord + 1] = {
                ["time"] = tick() - startTime; 
                ["maxupgrades"] = args[1].Stats.TotalValue.Value;
                ["cframe"] =   tostring(args[1].HumanoidRootPart.CFrame);
                ["character"] = args[1].Name; 
                ["type"] = "UpgradeUnit";
                
            }    
        elseif getnamecallmethod() == "FireServer" and tostring(self) == "SellUnit" then
            towerRecord[#towerRecord + 1] = {
                ["time"] = tick() - startTime; 
                ["character"] = args[1].Name; 
                ["type"] = "SellUnit";
            }    
        end
    
        
        return oldNamecall(self, unpack(args))
    end)
    setreadonly(mt, true)
    
    spawn(function()
    while task.wait() do 
        writefile(  getgenv().Settings.FileName ..".txt", httpService:JSONEncode(towerRecord))
        end
    end)
    end
    
    --Auto Replay
    if   game.PlaceId ~= 16474126979 and getgenv().Settings.replay == true then
         repeat wait() until game:IsLoaded()
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Ready"):FireServer()
        local replayName =   getgenv().Settings.FileName ..".txt"
        local startTime = tick()
     local macro = readfile(replayName)
     local httpService = game:GetService("HttpService")
     local recordTowers = httpService:JSONDecode(macro)
     local function stcf(s)
        return loadstring("return CFrame.new(" .. s .. ");")();
     end
     
        local function place(info)
           -- repeat task.wait() until tonumber(info.moneyreq) <= game.Players.LocalPlayer.Money.Value
            local args = {
                [1] = info.character,
                [2] = stcf(info.position),
                [3] = Vector3.zero,
                [4] = info.unitid
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CreateUnits"):FireServer(unpack(args))
        end 
        
        local function upgrade(info) -- fixed now its upgrade same unit in macro not random same unit 
            for i,v in pairs(game:GetService("Workspace").Unit[game.Players.LocalPlayer.Name]:GetChildren()) do 
                if v:IsA("Model") and v.Name == info.character and v:FindFirstChild("HumanoidRootPart") then 
               --     local max_upgrade = v.Stats.TotalValue.Value
            --        repeat task.wait() until tonumber(info.maxupgrades) <= max_upgrade
                local args = {
                [1] = v
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Upgrades"):FireServer(unpack(args))
                end    
                end
        end 

         local function sell(info)
            local player = game.Players.LocalPlayer.Name
            local unitsell = workspace:WaitForChild("Unit"):WaitForChild(player):WaitForChild(info.character)
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("SellUnit"):FireServer(unitsell)  
         end 

        local tower = 1
        spawn(function()
        while task.wait() do 
            if not recordTowers[tower] then 
                break 
            end
    
            local currentTask = recordTowers[tower]         
        if (currentTask.time <= tick() - startTime) then 
                 if currentTask.type == "CreateUnit" then 
                place(currentTask)
                 elseif currentTask.type == "UpgradeUnit" then 
                    upgrade(currentTask)
                 elseif currentTask.type == "SellUnit" then 
                    sell(currentTask)
                 end
                recordTowers[tower] = nil
                tower = tower + 1 
                end 
         end
    end)
    end
    
    -- 
    
    --Skip Reward
    if getgenv().Settings.skip == true then
        repeat wait() until game:IsLoaded()
        spawn(function()
        while task.wait(.1) do 
            if   game.PlaceId ~= 16474126979 then 
                if getgenv().Settings.Options == "ReturnToLobby" then 
        if game:GetService("Players").LocalPlayer.PlayerGui.Notification.ReturntoLobby.Visible == true then 
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild(getgenv().Settings.Options):FireServer()
        end 
        elseif getgenv().Settings.Options == "Replay" then 
            if game:GetService("Players").LocalPlayer.PlayerGui.Notification.Replay.Visible == true then 
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild(getgenv().Settings.Options):FireServer()
            end 
        end
        end
        end
        end)
        end 
